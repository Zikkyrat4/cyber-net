---
- name: Установка и настройка Kubernetes кластера
  hosts: k8s_cluster
  become: yes
  vars:
    kubernetes_version: "1.28"
    container_runtime: "containerd"
    pod_network_cidr: "10.244.0.0/16"

  tasks:
    - name: Обновление системы
      apt:
        update_cache: yes
        upgrade: dist

    - name: Установка зависимостей
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Добавление GPG ключа Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Добавление репозитория Docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Установка containerd
      apt:
        name: containerd.io
        state: present

    - name: Настройка containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
      notify: restart containerd

    - name: Добавление GPG ключа Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Добавление репозитория Kubernetes
      apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Установка Kubernetes компонентов
      apt:
        name:
          - kubelet={{ kubernetes_version }}.*
          - kubeadm={{ kubernetes_version }}.*
          - kubectl={{ kubernetes_version }}.*
        state: present

    - name: Блокировка обновлений Kubernetes
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Отключение swap
      shell: swapoff -a

    - name: Удаление swap из fstab
      lineinfile:
        path: /etc/fstab
        regexp: '.*swap.*'
        state: absent

    - name: Настройка системных параметров
      sysctl:
        name: "{{ item }}"
        value: "1"
        sysctl_file: /etc/sysctl.d/k8s.conf
        reload: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

  handlers:
    - name: restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

- name: Инициализация Kubernetes мастера
  hosts: k8s_master[0]
  become: yes
  tasks:
    - name: Инициализация кластера
      shell: |
        kubeadm init --pod-network-cidr={{ pod_network_cidr }} --apiserver-advertise-address={{ ansible_default_ipv4.address }}
      register: kubeadm_output

    - name: Настройка kubectl для пользователя
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      become_user: "{{ ansible_user }}"

    - name: Установка Flannel CNI
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      become_user: "{{ ansible_user }}"

    - name: Получение токена для присоединения нод
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: Сохранение команды присоединения
      set_fact:
        join_command: "{{ join_command.stdout }}"
      delegate_to: "{{ item }}"
      delegate_facts: true
      with_items: "{{ groups['k8s_workers'] }}"

- name: Присоединение worker нод к кластеру
  hosts: k8s_workers
  become: yes
  tasks:
    - name: Присоединение к кластеру
      shell: "{{ hostvars[groups['k8s_master'][0]]['join_command'] }}"
      when: join_command is defined